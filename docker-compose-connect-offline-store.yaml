---
version: '3.8'
services:

  # For connecting to offline store
  connect:
    image: confluentinc/cp-kafka-connect:7.5.0
    container_name: flink-connect
    ports:
      - "8089:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: true
      CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars'
    volumes:
      - /Downloads/DE_K3_M2/project/jars:/etc/kafka-connect/jars


  # Offline store
  timescaledb:
    image: timescale/timescaledb:latest-pg13
    command: postgres -c shared_preload_libraries=timescaledb
    container_name: flink-timescaledb
    ports:
      - "5437:5432"
    healthcheck:
      test: ['CMD', 'psql', '-U', 'k6', '-c', 'SELECT 1']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - PGDATA=/var/lib/postgresql/data/timescaledb
      - POSTGRES_DB=k6
      - POSTGRES_USER=k6
      - POSTGRES_PASSWORD=k6
    volumes:
      - pgdata:/var/lib/postgresql/data


volumes:
  # Volume for TimescaleDB
  pgdata: